(function (e) {
    "use strict";
    e.fn.counterUp = function (t) {
        var n = e.extend({ time: 400, delay: 10 }, t);
        return this.each(function () {
            var t = e(this),
                r = n,
                i = function () {
                    var e = [],
                        // Calculate the difference in seconds from now to November 13, 2024
                        targetDate = new Date('2024-11-13T00:00:00').getTime(),
                        currentDate = new Date().getTime(),
                        timeDifference = Math.floor((targetDate - currentDate) / 1000); // Time difference in seconds

                    if (timeDifference < 0) timeDifference = 0; // In case the target date is passed

                    var steps = r.time / r.delay;
                    var s = /[0-9]+,[0-9]+/.test(timeDifference.toString());

                    var o = /^[0-9]+$/.test(timeDifference.toString()),
                        u = /^[0-9]+\.[0-9]+$/.test(timeDifference.toString()),
                        a = u ? (timeDifference.toString().split(".")[1] || []).length : 0;

                    for (var f = steps; f >= 1; f--) {
                        var l = parseInt(timeDifference / steps * f);
                        u && (l = parseFloat(timeDifference / steps * f).toFixed(a));
                        if (s)
                            while (/(\d+)(\d{3})/.test(l.toString()))
                                l = l.toString().replace(/(\d+)(\d{3})/, "$1,$2");
                        e.unshift(l);
                    }
                    t.data("counterup-nums", e);
                    t.text("0");

                    var c = function () {
                        t.text(t.data("counterup-nums").shift());
                        if (t.data("counterup-nums").length) setTimeout(t.data("counterup-func"), r.delay);
                        else {
                            delete t.data("counterup-nums");
                            t.data("counterup-nums", null);
                            t.data("counterup-func", null);
                        }
                    };
                    t.data("counterup-func", c);
                    setTimeout(t.data("counterup-func"), r.delay);
                };
            t.waypoint(i, { offset: "100%", triggerOnce: !0 });
        });
    };
})(jQuery);
